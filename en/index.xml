<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Miao Yu | 于淼 </title>
    <link>https://yufree.cn/en/</link>
    <description>Recent content in blog on Miao Yu | 于淼 </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://yufree.cn/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Invitation to Submit Manuscripts for a Special Issue of Chemosphere</title>
      <link>https://yufree.cn/en/2022/07/11/invitation-to-submit-manuscripts-for-a-special-issue-of-chemosphere/</link>
      <pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2022/07/11/invitation-to-submit-manuscripts-for-a-special-issue-of-chemosphere/</guid>
      <description>&lt;p&gt;The prestigious journal &lt;em&gt;Chemosphere&lt;/em&gt; is currently running a special issue entitled &amp;quot; Human Health Effects of Chemical Mixture Exposures&amp;quot;. As we are acting as guest editors for this issue, we would like to welcome contributions from various disciplines. We kindly invite you to consider submitting your full paper to this special issue.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Guest editors&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Prof. Dr. Peng Gao University of Pittsburgh School of Public Health &lt;a href=&#34;mailto:peg47@pitt.edu&#34;&gt;peg47@pitt.edu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prof. Dr. Hui Peng University of Toronto &lt;a href=&#34;mailto:hui.peng@utoronto.ca&#34;&gt;hui.peng@utoronto.ca&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dr. Miao Yu The Jackson Laboratory &lt;a href=&#34;mailto:miao.yu@jax.org&#34;&gt;miao.yu@jax.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Special issue information&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Current environmental chemistry and toxicology studies mainly focus on a single stressor or single group of stressors, which does not reflect the multiple stressors in the dynamic exposome that humans are facing. Usually, human exposures are presented as cocktails with thousands of organic chemicals and dozens of inorganic chemicals being presented. However, the significant relationships and interactions among those stressors in the environment and their holistic human health effects remain unclear. Fortunately, the rapid developments of various techniques provide us with the possibility of revealing these mixture exposures. This Chemosphere special issue aims to provide a platform to dissect the complexity of chemical mixture exposures from experimental, analytical, and computational perspectives.&lt;/p&gt;
&lt;p&gt;Manuscript submission information:
The submission website for this journal is located at &lt;a href=&#34;https://www.editorialmanager.com/chemosphere/default.aspx&#34;&gt;here&lt;/a&gt;. Author guidelines and manuscript submission to Chemosphere can be found &lt;a href=&#34;https://www.elsevier.com/journals/chemosphere/0045-6535/guide-for-authors&#34;&gt;here&lt;/a&gt;. To ensure that your manuscript is correctly submitted to the special issue, please select ‘‘VSI: Exposure of Mixture” when you reach the step of “Article Type” during the submission process.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Keywords&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Human exposure, Chemical mixture, Health effects&lt;/p&gt;
&lt;p&gt;Learn &lt;a href=&#34;https://www.elsevier.com/authors/submit-your-paper/special-issues&#34;&gt;more&lt;/a&gt; about the benefits of publishing in a special issue.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using xcmsrocker on HPC via Singularity</title>
      <link>https://yufree.cn/en/2022/05/26/using-xcmsrocker-on-hpc-via-singularity/</link>
      <pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2022/05/26/using-xcmsrocker-on-hpc-via-singularity/</guid>
      <description>&lt;p&gt;Docker should be the most popular container platform. Container distribution via dockerhub makes it easy to provide all-in-one development/data analysis environment for scientist. It&amp;rsquo;s always a good idea to use container on the high performance computing (HPC) cluster to accelerate data processing. Since Docker provides root access to the system they are running on, it&amp;rsquo;s always not allowed to be used on HPC. On the other hand, Singularity is more friendly to scientific research with MPI support, as well as security restriction.&lt;/p&gt;
&lt;p&gt;I released &lt;a href=&#34;https://github.com/yufree/xcmsrocker&#34;&gt;xcmsrocker&lt;/a&gt; image for metabolomics data analysis for a long time and always said that it should be easy to deploy on HPC or cloud computing platform. It&amp;rsquo;s always right for the latter options and you can use docker image on the most popular cloud. However, you will need some extra work for HPC.&lt;/p&gt;
&lt;p&gt;The first issue is to build a Singularity image from a docker image hosted on Docker Hub. You need to load singularity module after login on HPC:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ml singularity
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then pull the xcmsrocker image&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;singularity pull docker://yufree/xcmsrocker:lastest
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now you will find a file with name &amp;lsquo;xcmsrocker_latest.sif&amp;rsquo; in you home folder. If your HPC use slurm for job management, you can use the following job script and save as a file called &amp;ldquo;rstudio-server.job&amp;rdquo;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh
#SBATCH --time=05:00:00
#SBATCH --signal=USR2
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=2
#SBATCH --mem=8192
#SBATCH --output=/home/%u/rstudio-server.job.%j

# Create temporary directory to be populated with directories to bind-mount in the container
# where writable file systems are necessary. Adjust path as appropriate for your computing environment.
workdir=$(python -c &#39;import tempfile; print(tempfile.mkdtemp())&#39;)

mkdir -p -m 700 ${workdir}/run ${workdir}/tmp ${workdir}/var/lib/rstudio-server
cat &amp;gt; ${workdir}/database.conf &amp;lt;&amp;lt;END
provider=sqlite
directory=/var/lib/rstudio-server
END

# Set OMP_NUM_THREADS to prevent OpenBLAS (and any other OpenMP-enhanced
# libraries used by R) from spawning more threads than the number of processors
# allocated to the job.
#
# Set R_LIBS_USER to a path specific to rocker/rstudio to avoid conflicts with
# personal libraries from any R installation in the host environment

cat &amp;gt; ${workdir}/rsession.sh &amp;lt;&amp;lt;END
#!/bin/sh
export OMP_NUM_THREADS=${SLURM_JOB_CPUS_PER_NODE}
export R_LIBS_USER=${HOME}/R/xcmsrocker
exec rsession &amp;quot;\${@}&amp;quot;
END

chmod +x ${workdir}/rsession.sh

export SINGULARITY_BIND=&amp;quot;${workdir}/run:/run,${workdir}/tmp:/tmp,${workdir}/database.conf:/etc/rstudio/database.conf,${workdir}/rsession.sh:/etc/rstudio/rsession.sh,${workdir}/var/lib/rstudio-server:/var/lib/rstudio-server&amp;quot;

# Do not suspend idle sessions.
# Alternative to setting session-timeout-minutes=0 in /etc/rstudio/rsession.conf
# https://github.com/rstudio/rstudio/blob/v1.4.1106/src/cpp/server/ServerSessionManager.cpp#L126
export SINGULARITYENV_RSTUDIO_SESSION_TIMEOUT=0

export SINGULARITYENV_USER=$(id -un)
export SINGULARITYENV_PASSWORD=$(openssl rand -base64 15)
# get unused socket per https://unix.stackexchange.com/a/132524
# tiny race condition between the python &amp;amp; singularity commands
readonly PORT=$(python -c &#39;import socket; s=socket.socket(); s.bind((&amp;quot;&amp;quot;, 0)); print(s.getsockname()[1]); s.close()&#39;)
cat 1&amp;gt;&amp;amp;2 &amp;lt;&amp;lt;END
1. SSH tunnel from your workstation using the following command:

   ssh -N -L 8787:${HOSTNAME}:${PORT} ${SINGULARITYENV_USER}@LOGIN-HOST

   and point your web browser to http://localhost:8787

2. log in to RStudio Server using the following credentials:

   user: ${SINGULARITYENV_USER}
   password: ${SINGULARITYENV_PASSWORD}

When done using RStudio Server, terminate the job by:

1. Exit the RStudio Session (&amp;quot;power&amp;quot; button in the top right corner of the RStudio window)
2. Issue the following command on the login node:

      scancel -f ${SLURM_JOB_ID}
END

singularity exec --cleanenv xcmsrocker_latest.sif \
    rserver --www-port ${PORT} \
            --auth-none=0 \
            --auth-pam-helper-path=pam-helper \
            --auth-stay-signed-in-days=30 \
            --auth-timeout-minutes=0 \
            --server-user XXX \
            --rsession-path=/etc/rstudio/rsession.sh
printf &#39;rserver exited&#39; 1&amp;gt;&amp;amp;2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This file is modified from &lt;a href=&#34;https://www.rocker-project.org/use/singularity/&#34;&gt;Rocker&amp;rsquo;s singularity tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here, you need to change &lt;code&gt;--server-user XXX&lt;/code&gt; to the user name for your HPC. For example, my user name to login HPC is &amp;lsquo;yufree&amp;rsquo; and I will set &lt;code&gt;--server-user yufree&lt;/code&gt;. This option will make sure you can login in your RStudio server and the default user don&amp;rsquo;t have access.&lt;/p&gt;
&lt;p&gt;Then submit this job to HPC:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sbatch rstudio-server.job
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then you should see a file with job ID as extension such as &amp;lsquo;rstudio-server.job.xxxxxxx&amp;rsquo; in your HPC home folder. &amp;lsquo;xxxxxxx&amp;rsquo; is your job ID. Then you can check the content in this file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat rstudio-server.job.xxxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You will find the user name, password and port information on HPC. The user name should be the same as you HPC user name and password will change anytime you submit this job.&lt;/p&gt;
&lt;p&gt;To access RStudio on your local computer, you need to bind your local port to the running HPC port. You need to open a new terminal to establish the SSH tunnel:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh -N -L 8787:[YOUR_PORT_INFORMATION] [HPC_USERNAME]@[HPC domain]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here the port information is from &lt;code&gt;rstudio-server.job.xxxxxxx&lt;/code&gt;. &lt;code&gt;[HPC_USERNAME]@[HPC domain]&lt;/code&gt; is the same with the regular ssh information to login in HPC. This command will forward HPC&amp;rsquo;s port to port 8787 on your local computer. After you open the SSH tunnel, you can access the RStudio from xcmsrocker via your own browser: http://localhost:8787&lt;/p&gt;
&lt;p&gt;Now you can enjoy your xcmsrocker image on HPC. Keep in mind that only the packages supporting parallel computing would get benefits from HPC resources. If the software doesn&amp;rsquo;t support parallel computing, you will need to modify their source code or it will be a waste of time to run them on HPC.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I am looking for a faculty position</title>
      <link>https://yufree.cn/en/2021/09/23/i-am-looking-for-a-faculty-position/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2021/09/23/i-am-looking-for-a-faculty-position/</guid>
      <description>&lt;p&gt;I am looking for a faculty position on earth. It&amp;rsquo;s always right to fit the position with your skill sets. However, after sending a dozen of applications with tailored resume or research statements, I decide to leave my cover letter online with my desired research interests.&lt;/p&gt;
&lt;p&gt;I am trained as an environmental analytical chemist from a state key laboratory under the supervision of Prof. Guibin Jiang in China. Then I worked with Prof. Janusz Pawliszyn in University of Waterloo, Canada for projects about &lt;em&gt;in vivo&lt;/em&gt; SPME based metabolomics data analysis as a PostDoc. After two years’ training, I joined Institute for Exposomic Research at Mount Sinai for environmental exposure related bioinformatics studies and worked with Dr. Lauren Petrick. I have published 37 peer reviewed journal papers with 9 first author or co-first author papers. My publications have more than 800 citations and a h-index of 17. I have two papers selected as journal cover (AC and ES&amp;amp;T letter) and one paper selected as ES&amp;amp;T Letter 2018 best paper. I authored three R packages on CRAN and developed shiny applications for my research. More details can be found in my CV.&lt;/p&gt;
&lt;p&gt;My research interests are the assessment of environmental exposures and impacts on humans through high resoltuion mass spectrometry based metabolomics analysis. I can apply &lt;em&gt;in vivo&lt;/em&gt; SPME technique to capture real-time changes in living organisms. I proposed the concept of “reactomics” based on paired mass distances to retrieve the changes of general chemical relationship in the samples and developed related software and database. Besides, I proposed a concept called “gatekeeper” to explain the influence of multiple exposures or exposome on health outcomes at molecular levels by metabolomics or other omics data. Those techniques and models can be used to understand the health impact of general environmental exposures. I can be either an experimental or bioinformatic scientist. However, I will treat myself as a mass spectrometry guy to solve various environmental related scientific problem by both dry and wet lab skills.&lt;/p&gt;
&lt;p&gt;I hope to continuously develop reactomics tools to investigate the influences of certain exposure and perform gatekeeper discovery for population-based exposure studies. I am planning to introduce machine learning into the biomarker reaction discovery based on reactomics and gatekeeper model for certain diseases. I am willing to collaborate with other researchers for multidisciplinary research projects.&lt;/p&gt;
&lt;p&gt;Feel free to &lt;a href=&#34;mailto:yufree@live.cn&#34;&gt;contact&lt;/a&gt; me if you need extra information. Thank you for your consideration.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Correlation coefficients cutoff to generate network in metabolomics</title>
      <link>https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/</guid>
      <description>
&lt;script src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;One common research purpose in metabolomics is to check the relations among the metabolites. Correlation network is one of the most popular way to show such relations. However, such network will change with different selection of the cutoff of correlation coefficients.&lt;/p&gt;
&lt;p&gt;Let’s check some real world data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(pmd)
library(enviGCMS)
data(spmeinvivo)
# remove redundant peaks
newmet &amp;lt;- globalstd(spmeinvivo)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 75 retention time cluster found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 369 paired masses found&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 5 unique within RT clusters high frequency PMD(s) used for further investigation.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The unique within RT clusters high frequency PMD(s) is(are)  28.03 21.98 44.03 17.03 18.01.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 719 isotopologue(s) related paired mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 492 multi-charger(s) related paired mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 8 retention group(s) have single peaks. 14 23 32 33 54 55 56 75&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 11 group(s) with multiple peaks while no isotope/paired relationship 4 5 7 8 11 41 42 49 68 72 73&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 9 group(s) with multiple peaks with isotope without paired relationship 2 9 22 26 52 62 64 66 70&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 4 group(s) with paired relationship without isotope 1 10 15 18&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 43 group(s) with paired relationship and isotope 3 6 12 13 16 17 19 20 21 24 25 27 28 29 30 31 34 35 36 37 38 39 40 43 44 45 46 47 48 50 51 53 57 58 59 60 61 63 65 67 69 71 74&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 291 std mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metabolites &amp;lt;- getfilter(spmeinvivo,rowindex = newmet$stdmassindex)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Originally we have 1459 peaks. After removal of redundant peaks such as isotope, adducts and Neutral losses by globalstd algorithm, we have 291 peaks as the number of potential metabolites. To check their relations, we will calculate the paired correlation coefficients among their intensities.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metcor &amp;lt;- cor(t(metabolites$data))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s check the distribution of correlation coefficients:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(metcor)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Since correlation coefficients are also associated with a p value, we can also check the distribution of p values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor.test.p &amp;lt;- function(x){
    FUN &amp;lt;- function(x, y) cor.test(x, y)[[&amp;quot;p.value&amp;quot;]]
    z &amp;lt;- outer(
      colnames(x), 
      colnames(x), 
      Vectorize(function(i,j) FUN(x[,i], x[,j]))
    )
    dimnames(z) &amp;lt;- list(colnames(x), colnames(x))
    z
}

pmat &amp;lt;- cor.test.p(t(metabolites$data))
hist(pmat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(pmat&amp;lt;0.05)/length(pmat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.4145&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;41% original p values are less than 0.05. We can filter the correlation coefficients based on this rule.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metcor2 &amp;lt;- metcor[pmat&amp;lt;0.05]
hist(metcor2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;range(abs(metcor2))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.6664 1.0000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we can find the cutoff is around +/-0.67. However, we didn’t perform FDR control. If we use BH method to correct the p value, we will have a different cutoff.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pmat_adj &amp;lt;- p.adjust(pmat)
metcor3 &amp;lt;- metcor[pmat_adj&amp;lt;0.05]
range(abs(metcor3))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.9881 1.0000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now the cutoff is 0.99. We can display the data as network:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metcor[pmat&amp;gt;=0.05] &amp;lt;- 0
library(igraph)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;igraph&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     decompose, spectrum&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:base&amp;#39;:
## 
##     union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;net &amp;lt;- graph.adjacency(metcor,weighted=TRUE,diag=FALSE,mode = &amp;#39;undirected&amp;#39;)
plot(net,vertex.size=1,edge.width=1,vertex.label=&amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here it seems all metabolites are connected and FDR control will solve this issue.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metcor &amp;lt;- cor(t(metabolites$data))
metcor[pmat_adj&amp;gt;=0.05] &amp;lt;- 0
net &amp;lt;- graph.adjacency(metcor,weighted=TRUE,diag=FALSE,mode = &amp;#39;undirected&amp;#39;)
plot(net,vertex.size=1,edge.width=1,vertex.label=&amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we will see the networks with few large clusters and lots of single metabolites without any association with each other.&lt;/p&gt;
&lt;p&gt;If we didn’t consider the p values, we can also check the networks with different cutoffs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n &amp;lt;- c()
for (i in seq(0,1,0.1)) {
        metcor &amp;lt;- cor(t(metabolites$data))
        metcor[metcor&amp;lt;i] &amp;lt;- 0
        net &amp;lt;- graph.adjacency(metcor,weighted=TRUE,diag=FALSE,mode = &amp;#39;undirected&amp;#39;)
        # plot(net,vertex.size=1,edge.width=1,vertex.label=&amp;quot;&amp;quot;)
        cn &amp;lt;- components(net)
        # check the numbers of cluster
        n &amp;lt;- c(n,length(table(membership(cn))[table(membership(cn))&amp;gt;1]))
}
plot(seq(0,1,0.1),n,xlab=&amp;#39;cutoff&amp;#39;,ylab = &amp;#39;cluster number&amp;#39;,type = &amp;#39;l&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we can see the cluster numbers will firstly increase and then decrease. Let’s check &lt;span class=&#34;math display&#34;&gt;\[0.8,1\]&lt;/span&gt; carefully.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n &amp;lt;- c()
for (i in seq(0.8,1,0.001)) {
        metcor &amp;lt;- cor(t(metabolites$data))
        metcor[metcor&amp;lt;i] &amp;lt;- 0
        net &amp;lt;- graph.adjacency(metcor,weighted=TRUE,diag=FALSE,mode = &amp;#39;undirected&amp;#39;)
        # plot(net,vertex.size=1,edge.width=1,vertex.label=&amp;quot;&amp;quot;)
        cn &amp;lt;- components(net)
        # check the numbers of cluster
        n &amp;lt;- c(n,length(table(membership(cn))[table(membership(cn))&amp;gt;1]))
}
plot(seq(0.8,1,0.001),n,xlab=&amp;#39;cutoff&amp;#39;,ylab = &amp;#39;cluster number&amp;#39;,type = &amp;#39;l&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# display the cutoff
seq(0.8,1,0.001)[which.max(n)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.988&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we find the max number of network clusters has a similar cutoff of p value cutoff with FDR control. However, the computation process is much faster. When the cutoff is small, all metabolites are connected. When the cutoff is large, few metabolites will be covered. In terms of physics, largest number of network clusters means the coverage of largest numbers of connected metabolites with largest clusters separations. I think this should be the fastest way to select cutoff from the real world data.&lt;/p&gt;
&lt;p&gt;Actually, I add a function called `getcf()` into `enet` package to automate find this cutoff of correlation network analysis. Here is the network for our demo data:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metcor &amp;lt;- cor(t(metabolites$data))
metcor[metcor&amp;lt;seq(0.8,1,0.001)[which.max(n)]] &amp;lt;- 0
net &amp;lt;- graph.adjacency(metcor,weighted=TRUE,diag=FALSE,mode = &amp;#39;undirected&amp;#39;)
plot(net,vertex.size=1,edge.width=1,vertex.label=&amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/07/28/correlation-coefficients-cutoff-to-generate-network-in-metabolomics/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The reason to avoid using p values or adjust p values of correlation test is not only the slow speed of computation, but also cutoff selection of p values or adjust p values is determined by the researcher instead of the data themselves. p value cutoff will not help us to find biological functional modules when all the metabolites are connected. In my opinion, each data sets can speak for itself by an automated cutoff selection process and I think the network cluster numbers can just take this job.&lt;/p&gt;
&lt;p&gt;PS. I actually use the same idea to generate PMD metabolites network, which can be treated as another relation among metabolites with chemical meanings.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>reactomics data analysis template within rmwf package</title>
      <link>https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/</guid>
      <description>
&lt;script src=&#34;https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;To make reactomics data analysis more transparent and reproducible, I included one template in rmwf package. You could install the package from Github.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;#39;remotes&amp;#39;)
remotes::install_github(&amp;quot;yufree/rmwf&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you use RStudio, you could try:&lt;/p&gt;
&lt;p&gt;File-New file-R Markdown-from template&lt;/p&gt;
&lt;p&gt;Then select ‘reactomics’ to use template for reactomics analysis. Here is a preview for data analysis of this &lt;a href=&#34;https://www.metabolomicsworkbench.org/data/DRCCMetadata.php?Mode=Study&amp;amp;StudyID=ST000560&#34;&gt;study&lt;/a&gt;:&lt;/p&gt;
&lt;div id=&#34;demo-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Demo data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path &amp;lt;- system.file(&amp;quot;demodata/untarget&amp;quot;, package = &amp;quot;rmwf&amp;quot;)
files &amp;lt;- list.files(path,recursive = T,full.names = T)
ST000560pos &amp;lt;- enviGCMS::getmzrtcsv(files[grepl(&amp;#39;ST000560mzrt&amp;#39;,files)])&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;remove-the-redundant-peaks&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Remove the redundant peaks&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# check the paired mass distance relationship
pmd &amp;lt;- pmd::getpaired(ST000560pos)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 56 retention time cluster found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 826 paired masses found&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 23 unique within RT clusters high frequency PMD(s) used for further investigation.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The unique within RT clusters high frequency PMD(s) is(are)  12 2.02 26.02 28.03 14.02 26.01 54.05 24 9.99 40.03 44.04 2.01 15.01 30.01 27.02 44.03 14.01 21.98 30.05 42.05 29.02 4.03 66.02.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 182 isotopologue(s) related paired mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1145 multi-charger(s) related paired mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pmd::plotpaired(pmd)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we could see some common PMDs within the same retention time bins like 21.98Da for the mass differences between [M+Na] and [M+H]. Other PMDs might refer to in-source reaction such as PMD 2.02Da for opening or forming of double bond. Another common kinds of PMDs should the homologous series compounds which could not be separated by the column such as PMD 14.02Da for CH2, PMD 28.03Da for C2H4, PMD 44.03Da for C3H6, and 56.05Da for C4H8, as well as 58.04Da for C3H6O. There are also some PMDs which highly depended on the the samples’ matrix. Anyway, we will check those high frequency PMD considering isotopes, as well as multiple chargers to extract one peak for one potential compound. Such algorithm is called GlobalStd. The advantage of GlobalStd is that no pre-defined paired mass distances list is needed to remove redundant peaks. When a PMD appeared with high frequency in certain samples, it will be treated as potential adducts to be removed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;std &amp;lt;- pmd::getstd(pmd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 4 retention group(s) have single peaks. 52 54 55 56&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 10 group(s) with multiple peaks while no isotope/paired relationship 26 30 33 35 45 47 48 49 51 53&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2 group(s) with multiple peaks with isotope without paired relationship 29 32&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 20 group(s) with paired relationship without isotope 10 11 13 14 15 16 18 20 23 27 28 31 36 38 40 42 43 44 46 50&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 20 group(s) with paired relationship and isotope 1 2 3 4 5 6 7 8 9 12 17 19 21 22 24 25 34 37 39 41&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 196 std mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pmd::plotstd(std)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In this case, we get 205 peaks for 205 potential compounds. Now we could retain those peaks for reactomics analysis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# generate new peak list and matrix sample
peakstd &amp;lt;- enviGCMS::getfilter(std,rowindex = std$stdmassindex)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;GlobalStd algorithm was originally designed to retrieve independent peaks by the paired mass distances relationship among features without a predefined adducts or neutral loss list. However, the peaks from the same compounds should also be correlated with each other. Meanwhile, the independent peaks selection might still have peaks from the same compounds when the peaks’ high frequency PMDs are not independent. In this case, the GlobalStd algorithm could set a cutoff to re-check the independent peaks by their relationship with potential PMDs groups and select the base peaks for the clusters of peaks.&lt;/p&gt;
&lt;p&gt;Meanwhile, network analysis could be used for PMDDA workflow to select precursor ion for MS/MS annotation. Such precursor ions was selected by checking the peak with highest intensity of each independent peaks’ high frequency PMD network cluster, which could be treated as pseudo spectra.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extract-high-frequency-pmds&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Extract high frequency PMDs&lt;/h1&gt;
&lt;p&gt;To retrieve the general chemical relationship, we will focus on high frequency PMDs within a certain metabolic profile. If one PMD occur multiple times among peaks from a snapshot of samples, certain reactions or bio-process should be important or occur multiple times compared with rarely PMD, which could be a random differences among compounds. In this case, extraction of high frequency PMDs will refine the investigation on a few active reactions instead of treating each peak individually, which is almost impossible for untargeted analysis.&lt;/p&gt;
&lt;p&gt;Such PMDs frequency analysis should be performed on the data set with the redundant peaks removal. Otherwise, the high frequency PMD among compounds will be immersed by PMD with from isotopes, adducts or other common PMDs from the backgrounds.&lt;/p&gt;
&lt;p&gt;You could define the cutoff of frequency while the default setting using the largest PMD network cluster numbers to determine the cutoff, which try to capture more information. Here we will retrieve high frequency PMDs from the demo data using a larger cutoff to reduce the complexity:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hfp &amp;lt;- pmd::getsda(std,freqcutoff = 8)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 8 groups were found as high frequency PMD group.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0 was found as high frequency PMD. 
## 2.02 was found as high frequency PMD. 
## 12 was found as high frequency PMD. 
## 14.02 was found as high frequency PMD. 
## 24 was found as high frequency PMD. 
## 26.02 was found as high frequency PMD. 
## 28.03 was found as high frequency PMD. 
## 50.01 was found as high frequency PMD.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pmd::plotstdsda(hfp)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we could find 8 PMDs were selected as high frequency PMDs. PMD 0 Da could be some isomers, PMD 2.02 Da could be reduction reactions, etc. Some PMDs can be the combination of other PMDs, which could be a chain reactions. From the plot you might also identify the homologous series by the retention times relations.&lt;/p&gt;
&lt;p&gt;When you have the lists of high frequency PMDs, you could check the PMDs changes among groups. Here we will quantitatively analysis certain PMD to show the reaction level changes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# remove QC sample
hfp2 &amp;lt;- enviGCMS::getfilter(hfp,colindex = !grepl(&amp;#39;QC&amp;#39;,hfp$group$sample_group))
# check pmd 14.02
qreact &amp;lt;- pmd::getreact(hfp2,pmd = 14.02)
qreactsum &amp;lt;- apply(qreact$data,2,sum)
t.test(qreactsum~qreact$group$sample_group)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Welch Two Sample t-test
## 
## data:  qreactsum by qreact$group$sample_group
## t = 2.2, df = 17, p-value = 0.04
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##   2939 95129
## sample estimates:
## mean in group control    mean in group IgAN 
##               1247817               1198783&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mfrow=c(1,1))
boxplot(qreactsum~qreact$group$sample_group,xlab=&amp;#39;&amp;#39;,ylab = &amp;#39;intensity&amp;#39;, main=&amp;#39;PMD 14.02Da&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we could find PMD 14.02Da could be a biomarker reaction for case and control. Meanwhile, paired relationship could be connected into network to show the overall relationship within the samples.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reactomics-network-analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Reactomics network analysis&lt;/h1&gt;
&lt;p&gt;The relation among those high frequency PMDs peaks could be further checked in two ways by network analysis: one from the correlation analysis and another from the PMD analysis. If we combined them together, reactomics network could be generated to capture the major reaction network within the samples. We will check them step by step.&lt;/p&gt;
&lt;div id=&#34;build-the-correlation-network&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Build the correlation network&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(igraph)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;igraph&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     decompose, spectrum&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:base&amp;#39;:
## 
##     union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cutoff &amp;lt;- 0.9
metacor &amp;lt;- stats::cor(t(peakstd$data))
metacor[abs(metacor)&amp;lt;cutoff] &amp;lt;- 0
df &amp;lt;- data.frame(from=rownames(peakstd$data)[which(lower.tri(metacor), arr.ind = T)[, 1]],to=rownames(peakstd$data)[which(lower.tri(metacor), arr.ind = T)[, 2]],cor=metacor[lower.tri(metacor)])
df &amp;lt;- df[abs(df$cor)&amp;gt;0,]
df$direction &amp;lt;- ifelse(df$cor&amp;gt;0,&amp;#39;positive&amp;#39;,&amp;#39;negative&amp;#39;)
net &amp;lt;- igraph::graph_from_data_frame(df,directed = F)
netc &amp;lt;- igraph::components(net)
message(paste(netc$no, &amp;#39;metabolites correlation network clusters found&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 16 metabolites correlation network clusters found&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;index &amp;lt;- rep(NA,length(rownames(peakstd$data)))
index[match(names(netc$membership),rownames(peakstd$data))] &amp;lt;- netc$membership
message(paste(sum(is.na(index)), &amp;#39;out of&amp;#39;, length(rownames(peakstd$data)), &amp;#39;metabolites have no correlation with other metabolites&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 88 out of 197 metabolites have no correlation with other metabolites&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(net,vertex.label=NA,vertex.size =5,edge.width = 3, main = &amp;#39;Correlation network&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we could see the correlation among those peaks as network. 109 peaks have relations with each others and 88 peaks were single.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;build-the-pmd-network&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Build the PMD network&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;peaksda &amp;lt;- pmd::getsda(std,freqcutoff = 8)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 8 groups were found as high frequency PMD group.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0 was found as high frequency PMD. 
## 2.02 was found as high frequency PMD. 
## 12 was found as high frequency PMD. 
## 14.02 was found as high frequency PMD. 
## 24 was found as high frequency PMD. 
## 26.02 was found as high frequency PMD. 
## 28.03 was found as high frequency PMD. 
## 50.01 was found as high frequency PMD.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- peaksda$sda
df$from &amp;lt;- paste0(&amp;#39;M&amp;#39;,round(df$ms1,4),&amp;#39;T&amp;#39;,round(df$rt1,1))
df$to &amp;lt;- paste0(&amp;#39;M&amp;#39;,round(df$ms2,4),&amp;#39;T&amp;#39;,round(df$rt2,1))
net &amp;lt;- graph_from_data_frame(df[,c(&amp;#39;from&amp;#39;,&amp;#39;to&amp;#39;,&amp;#39;diff2&amp;#39;)],directed = F)
netc &amp;lt;- igraph::components(net)
message(paste(netc$no, &amp;#39;metabolites PMD network clusters found&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 15 metabolites PMD network clusters found&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;index &amp;lt;- rep(NA,length(rownames(peakstd$data)))
index[match(names(netc$membership),rownames(peakstd$data))] &amp;lt;- netc$membership
message(paste(sum(is.na(index)), &amp;#39;out of&amp;#39;, length(rownames(peakstd$data)), &amp;#39;metabolites have no PMD relations with other metabolites&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 143 out of 197 metabolites have no PMD relations with other metabolites&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pal &amp;lt;- grDevices::rainbow(8)
plot(net,vertex.label=NA,vertex.size =5,edge.width = 3,edge.color = pal[as.numeric(as.factor(E(net)$diff2))], main = &amp;#39;PMD network&amp;#39;)
legend(&amp;quot;topright&amp;quot;,bty = &amp;quot;n&amp;quot;,
       legend=unique(E(net)$diff2),
       fill=unique(pal[as.numeric(as.factor(E(net)$diff2))]), border=NA,horiz = F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unique(E(net)$diff2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 24.00  0.00 50.01  2.02 12.00 28.03 26.02 14.02&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By checking the high frequency PMD relation, we see a similar while different results. Those high frequency PMDs could also be linked to potential reactions such as 0Da for isomers, 2.02Da for double bonds breaking/forming. Such PMDs could reveal the major reactions found among the metabolites. 54 peaks have PMDs relations with each others and 143 peaks were single.&lt;/p&gt;
&lt;p&gt;Here we need to define a frequency cutoff. With the increasing number of high frequency PMDs cutoff, the ions cluster numbers would firstly increase then decrease. At the very beginning, the increasing numbers will include more information because high frequency PMDs always capture real reactions or structures relationships among compounds. Low frequency PMDs will introduce limited information as they might be generated by random differences among ions. In terms of network analysis, when the high frequency PMD cutoff is small, the network clusters will be small. However, when the numbers of network clusters are not increasing any more with more PMDs included, the relationship information among ions will not increase and the cutoff could be automated detected by GlobalStd algorithm. In detail, the algorithm will try to include PMDs one by one starting from the highest frequency PMDs. Meanwhile, the ions cluster numbers were recorded for the generated network among independent peaks and the cutoff will be the PMDs list with the largest number of independent peaks’ network cluster.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;build-the-pmd-network-with-correlation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Build the PMD network with correlation&lt;/h2&gt;
&lt;p&gt;We could combine the PMD relation with correlation together to show the quantitative reactomics networks within the samples. Those metabolites could be quantitatively checked among different samples.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;peaksda &amp;lt;- pmd::getsda(std,freqcutoff = 8,corcutoff = 0.6)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 8 groups were found as high frequency PMD group.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0 was found as high frequency PMD. 
## 2.02 was found as high frequency PMD. 
## 12 was found as high frequency PMD. 
## 14.02 was found as high frequency PMD. 
## 24 was found as high frequency PMD. 
## 26.02 was found as high frequency PMD. 
## 28.03 was found as high frequency PMD. 
## 50.01 was found as high frequency PMD.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- peaksda$sda
df$from &amp;lt;- paste0(&amp;#39;M&amp;#39;,round(df$ms1,4),&amp;#39;T&amp;#39;,round(df$rt1,1))
df$to &amp;lt;- paste0(&amp;#39;M&amp;#39;,round(df$ms2,4),&amp;#39;T&amp;#39;,round(df$rt2,1))
net &amp;lt;- graph_from_data_frame(df[,c(&amp;#39;from&amp;#39;,&amp;#39;to&amp;#39;,&amp;#39;diff2&amp;#39;)],directed = F)
netc &amp;lt;- igraph::components(net)
message(paste(netc$no, &amp;#39;metabolites quantitative reactomics network clusters found&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 10 metabolites quantitative reactomics network clusters found&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;index &amp;lt;- rep(NA,length(rownames(peakstd$data)))
index[match(names(netc$membership),rownames(peakstd$data))] &amp;lt;- netc$membership
message(paste(sum(is.na(index)), &amp;#39;out of&amp;#39;, length(rownames(peakstd$data)), &amp;#39;metabolites have no PMD&amp;amp;correlation relations with other metabolites&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 162 out of 197 metabolites have no PMD&amp;amp;correlation relations with other metabolites&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;net &amp;lt;- graph_from_data_frame(peaksda$sda,directed = F)
pal &amp;lt;- grDevices::rainbow(21)
plot(net,vertex.label=NA,vertex.size =5,edge.width = 3,edge.color = pal[as.numeric(as.factor(E(net)$diff2))], main = &amp;#39;Quantitative reactomics network&amp;#39;)
legend(&amp;quot;topright&amp;quot;,bty = &amp;quot;n&amp;quot;,
       legend=unique(E(net)$diff2),
       fill=unique(pal[as.numeric(as.factor(E(net)$diff2))]), border=NA,horiz = F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2021/02/09/reactomics-workflow-template-within-rmwf-package/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>MS/MS annotation by paired mass distances analysis</title>
      <link>https://yufree.cn/en/2021/01/17/ms-ms-annotation-by-paired-mass-distances/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2021/01/17/ms-ms-annotation-by-paired-mass-distances/</guid>
      <description>
&lt;script src=&#34;https://yufree.cn/en/2021/01/17/ms-ms-annotation-by-paired-mass-distances/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Last year I make a poster presentation for MS/MS annotation by paired mass distance(PMD) analysis. It’s already been included as &lt;code&gt;pmdanno&lt;/code&gt; function in pmd package. Here I will explain the principle of PMD annotation.&lt;/p&gt;
&lt;p&gt;Firstly, you need a spectra database. Here I use HMDB MS/MS spectra database as an example. Then you will get a list with each compound as element. The list should have a element of spectra with mz and ins, an element of name, an element of prec for precursor ions. I have included this database in rmwf package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# remotes::install_github(&amp;#39;yufree/rmwf&amp;#39;)
# remotes::install_github(&amp;#39;yufree/pmd&amp;#39;)
library(rmwf)
data(&amp;quot;qtof&amp;quot;)
str(qtof)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## List of 4
##  $ name   : chr [1:5062] &amp;quot;HMDB0000014&amp;quot; &amp;quot;HMDB0000014&amp;quot; &amp;quot;HMDB0000014&amp;quot; &amp;quot;HMDB0000014&amp;quot; ...
##  $ mz     : num [1:5062] 227 227 227 227 227 ...
##  $ msms   :List of 5062
##   ..$ : num 116
##   ..$ : num [1:3] 5 111 116
##   ..$ : num [1:15] 0.07 16.03 16.1 27.01 42.01 ...
##   ..$ : num [1:15] 0.07 16.03 16.1 27.01 42.01 ...
##   ..$ : num 116
##   ..$ : num [1:3] 5 111 116
##   ..$ : num [1:136] 1.98 2.01 2.01 2.02 2.02 2.02 3.99 3.99 4.03 4.03 ...
##   ..$ : num [1:36] 1 3.99 3.99 5 8.01 ...
##   ..$ : num [1:3] 30 44 74
##   ..$ : num [1:6] 18 18 36 83 101 ...
##   ..$ : num [1:15] 1.98 9.98 11.96 18.01 26.02 ...
##   ..$ : num [1:6] 18 18 36 83 101 ...
##   ..$ : num [1:15] 1.98 9.98 11.96 18.01 26.02 ...
##   ..$ : num [1:3] 30 44 74
##   ..$ : num 1
##   ..$ : num [1:10] 1 10 34 43 44 ...
##   ..$ : num [1:3] 1 18 19
##   ..$ : num [1:45] 0.98 1 9.98 15.01 16.03 ...
##   ..$ : num [1:190] 0.93 0.98 1 1 1.06 2.02 2.02 2.04 2.95 2.95 ...
##   ..$ : num [1:105] 1 1 1.01 1.06 2 2.01 2.02 2.95 2.98 3.01 ...
##   ..$ : num [1:703] 0.03 0.04 0.62 0.93 0.93 0.97 0.99 1 1 1 ...
##   ..$ : num [1:3] 46 71 117
##   ..$ : num [1:36] 2.02 8.01 9.98 12 12 ...
##   ..$ : num [1:21] 0.08 9.04 12 17.03 29.03 ...
##   ..$ : num [1:21] 0.08 9.04 12 17.03 29.03 ...
##   ..$ : num [1:3] 46 71 117
##   ..$ : num [1:36] 2.02 8.01 9.98 12 12 ...
##   ..$ : num 17
##   ..$ : num 27
##   ..$ : num [1:6] 15 27 27 42 42 ...
##   ..$ : num 27
##   ..$ : num [1:6] 15 27 27 42 42 ...
##   ..$ : num 17
##   ..$ : num [1:3] 1.01 59.01 60.02
##   ..$ : num [1:3] 1.01 59.01 60.02
##   ..$ : num [1:6] 18 37.1 55.1 212 249.1 ...
##   ..$ : num 212
##   ..$ : num 212
##   ..$ : num 212
##   ..$ : num 212
##   ..$ : num [1:6] 18 37.1 55.1 212 249.1 ...
##   ..$ : num 132
##   ..$ : num 132
##   ..$ : num [1:3] 27 132 159
##   ..$ : num 132
##   ..$ : num [1:3] 27 132 159
##   ..$ : num 132
##   ..$ : num 17
##   ..$ : num 132
##   ..$ : num 132
##   ..$ : num 132
##   ..$ : num 132
##   ..$ : num [1:3] 1 17 18
##   ..$ : num 9.45
##   ..$ : num 9.45
##   ..$ : num 194
##   ..$ : num [1:3] 55.1 194 249.1
##   ..$ : num [1:3] 55.1 194 249.1
##   ..$ : num 194
##   ..$ : num [1:10] 0.95 17.06 18.01 24.95 42.01 ...
##   ..$ : num [1:15] 0.95 1.01 1.01 2.02 17.06 ...
##   ..$ : num [1:10] 0.95 17.06 18.01 24.95 42.01 ...
##   ..$ : num [1:3] 1 36 37
##   ..$ : num [1:2485] 0.03 0.03 0.03 0.04 0.04 0.04 0.04 0.04 0.04 0.04 ...
##   ..$ : num 46
##   ..$ : num 46
##   ..$ : num [1:3] 18 26 44
##   ..$ : num [1:3] 18 26 44
##   ..$ : num 17
##   ..$ : num [1:3] 18 28 46
##   ..$ : num [1:3] 18 28 46
##   ..$ : num 26
##   ..$ : num 26
##   ..$ : num [1:6] 2.02 17.03 25.98 27.99 43.01 ...
##   ..$ : num [1:6] 2.02 17.03 25.98 27.99 43.01 ...
##   ..$ : num [1:3] 1 180 181
##   ..$ : num [1:16836] 0.02 0.03 0.03 0.03 0.04 0.04 0.05 0.05 0.05 0.06 ...
##   ..$ : num [1:15] 6.09 18.01 19.12 20.88 21.91 ...
##   ..$ : num 46
##   ..$ : num 46
##   ..$ : num 46
##   ..$ : num 46
##   ..$ : num 46
##   ..$ : num 46
##   ..$ : num 46
##   ..$ : num 46
##   ..$ : num [1:28] 1.01 1.98 8.06 15.94 15.99 ...
##   ..$ : num [1:28] 1.01 1.98 8.06 15.94 15.99 ...
##   ..$ : num 212
##   ..$ : num 212
##   ..$ : num [1:3] 18 225 243
##   ..$ : num [1:3] 18 225 243
##   ..$ : num [1:3] 18 225 243
##   ..$ : num [1:3] 18 225 243
##   ..$ : num 212
##   ..$ : num 212
##   ..$ : num [1:3] 2.02 44.03 46.04
##   ..$ : num [1:3] 2.02 44.03 46.04
##   ..$ : num 16
##   .. [list output truncated]
##  $ msmsraw:List of 5062
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 112 228
##   .. ..$ intensity : num [1:2] 70 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 112 117 228
##   .. ..$ intensity : num [1:3] 100 25.8 50.5
##   ..$ :&amp;#39;data.frame&amp;#39;: 6 obs. of  2 variables:
##   .. ..$ masscharge: num [1:6] 66 93 135 210 226 ...
##   .. ..$ intensity : num [1:6] 15.5 100 15.2 12 14.2 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 6 obs. of  2 variables:
##   .. ..$ masscharge: num [1:6] 66 93 135 210 226 ...
##   .. ..$ intensity : num [1:6] 15.5 100 15.2 12 14.3 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 112 228
##   .. ..$ intensity : num [1:2] 70 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 112 117 228
##   .. ..$ intensity : num [1:3] 100 25.8 50.5
##   ..$ :&amp;#39;data.frame&amp;#39;: 814 obs. of  2 variables:
##   .. ..$ masscharge: num [1:814] 45.2 45.4 45.4 45.8 46 ...
##   .. ..$ intensity : num [1:814] 2.75 2.38 1.81 2.23 2.07 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 890 obs. of  2 variables:
##   .. ..$ masscharge: num [1:890] 44.9 44.9 44.9 45.7 45.7 ...
##   .. ..$ intensity : num [1:890] 0.927 1.514 1.947 0.402 0.34 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 108 138 182
##   .. ..$ intensity : num [1:3] 72.5 100 48.7
##   ..$ :&amp;#39;data.frame&amp;#39;: 7 obs. of  2 variables:
##   .. ..$ masscharge: num [1:7] 65 92.1 120 138.1 148 ...
##   .. ..$ intensity : num [1:7] 12.29 8.8 6.49 7.67 100 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 6 obs. of  2 variables:
##   .. ..$ masscharge: num [1:6] 65 92 110 120 122 ...
##   .. ..$ intensity : num [1:6] 88.3 42.8 11.8 24.6 13.5 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 7 obs. of  2 variables:
##   .. ..$ masscharge: num [1:7] 65 92.1 120 138.1 148 ...
##   .. ..$ intensity : num [1:7] 12.31 8.81 6.51 7.71 100 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 6 obs. of  2 variables:
##   .. ..$ masscharge: num [1:6] 65 92 110 120 122 ...
##   .. ..$ intensity : num [1:6] 88.3 42.8 11.8 24.6 13.5 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 108 138 182
##   .. ..$ intensity : num [1:3] 72.6 100 48.6
##   ..$ :&amp;#39;data.frame&amp;#39;: 6 obs. of  2 variables:
##   .. ..$ masscharge: num [1:6] 166 200 209 243 244 ...
##   .. ..$ intensity : num [1:6] 1.05 3.46 1.31 100 12.76 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 14 obs. of  2 variables:
##   .. ..$ masscharge: num [1:14] 122 156 165 166 167 ...
##   .. ..$ intensity : num [1:14] 7.75 10.08 4.93 30.33 3.05 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 6 obs. of  2 variables:
##   .. ..$ masscharge: num [1:6] 227 228 229 245 246 ...
##   .. ..$ intensity : num [1:6] 59.52 5.77 2.16 100 10.01 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 53 obs. of  2 variables:
##   .. ..$ masscharge: num [1:53] 97 98.1 100 101 105.1 ...
##   .. ..$ intensity : num [1:53] 13.87 1.2 1.36 1.07 8.73 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 72 obs. of  2 variables:
##   .. ..$ masscharge: num [1:72] 79.1 81.1 82 85 91.1 ...
##   .. ..$ intensity : num [1:72] 2.94 2.13 3.41 3.7 6.6 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 26 obs. of  2 variables:
##   .. ..$ masscharge: num [1:26] 91.1 93.1 94.1 97 99 ...
##   .. ..$ intensity : num [1:26] 18.02 8.07 8.51 81.98 9.6 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 228 obs. of  2 variables:
##   .. ..$ masscharge: num [1:228] 95.1 95.1 95.3 96.2 96.9 ...
##   .. ..$ intensity : num [1:228] 11.61 7.12 2.62 8.8 1.87 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 110 156 210 227
##   .. ..$ intensity : num [1:4] 25.43 43.54 9.51 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 10 obs. of  2 variables:
##   .. ..$ masscharge: num [1:10] 83.1 93 95.1 110.1 122.1 ...
##   .. ..$ intensity : num [1:10] 12.8 10.7 11 100 13.1 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 7 obs. of  2 variables:
##   .. ..$ masscharge: num [1:7] 81 93 110 154 163 ...
##   .. ..$ intensity : num [1:7] 14.4 11.1 100 79.3 11 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 7 obs. of  2 variables:
##   .. ..$ masscharge: num [1:7] 81 93 110 154 163 ...
##   .. ..$ intensity : num [1:7] 14.4 11.1 100 79.3 11 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 110 156 210 227
##   .. ..$ intensity : num [1:4] 25.46 43.52 9.52 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 10 obs. of  2 variables:
##   .. ..$ masscharge: num [1:10] 83.1 93 95.1 110.1 122.1 ...
##   .. ..$ intensity : num [1:10] 12.8 10.7 11 100 13.1 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 119 136
##   .. ..$ intensity : num [1:2] 37.4 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 92 107 134
##   .. ..$ intensity : num [1:3] 6.71 26.83 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 8 obs. of  2 variables:
##   .. ..$ masscharge: num [1:8] 64 65 68 90 92 ...
##   .. ..$ intensity : num [1:8] 6.91 37.74 8.31 8.91 74.77 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 92 107 134
##   .. ..$ intensity : num [1:3] 6.69 26.8 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 8 obs. of  2 variables:
##   .. ..$ masscharge: num [1:8] 64 65 68 90 92 ...
##   .. ..$ intensity : num [1:8] 6.91 37.73 8.33 8.95 74.78 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 119 136
##   .. ..$ intensity : num [1:2] 37.4 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 58.1 59.1 118.1
##   .. ..$ intensity : num [1:3] 100 30.7 83
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 58.1 59.1 118.1
##   .. ..$ intensity : num [1:3] 100 30.7 82.9
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 79 97 134 346
##   .. ..$ intensity : num [1:4] 100 37.9 29.9 66.8
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 136 348
##   .. ..$ intensity : num [1:2] 20.5 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 136 348
##   .. ..$ intensity : num [1:2] 83.8 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 136 348
##   .. ..$ intensity : num [1:2] 20.4 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 136 348
##   .. ..$ intensity : num [1:2] 83.8 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 79 97 134 346
##   .. ..$ intensity : num [1:4] 100 37.9 29.8 66.8
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 136 268
##   .. ..$ intensity : num [1:2] 31.2 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 136 268
##   .. ..$ intensity : num [1:2] 100 57.1
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 107 134 266
##   .. ..$ intensity : num [1:3] 12.8 100 15.9
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 119 136 268
##   .. ..$ intensity : num [1:3] 7.81 100 10.61
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 107 134 266
##   .. ..$ intensity : num [1:3] 12.8 100 15.9
##   ..$ :&amp;#39;data.frame&amp;#39;: 5 obs. of  2 variables:
##   .. ..$ masscharge: num [1:5] 136 137 268 269 270
##   .. ..$ intensity : num [1:5] 47.69 2.16 100 9.67 1.29
##   ..$ :&amp;#39;data.frame&amp;#39;: 5 obs. of  2 variables:
##   .. ..$ masscharge: num [1:5] 94 119 120 136 137
##   .. ..$ intensity : num [1:5] 1.52 17.18 1.37 100 5.09
##   ..$ :&amp;#39;data.frame&amp;#39;: 6 obs. of  2 variables:
##   .. ..$ masscharge: num [1:6] 119 136 137 268 269 ...
##   .. ..$ intensity : num [1:6] 0.3 100 5.31 68.77 6.91 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 136 268
##   .. ..$ intensity : num [1:2] 31.2 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 136 268
##   .. ..$ intensity : num [1:2] 100 57
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 119 136 268
##   .. ..$ intensity : num [1:3] 7.77 100 10.65
##   ..$ :&amp;#39;data.frame&amp;#39;: 242 obs. of  2 variables:
##   .. ..$ masscharge: num [1:242] 46.8 47 47.9 48.7 48.7 ...
##   .. ..$ intensity : num [1:242] 1.127 0.999 0.384 0.973 1.434 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 90.1 99.5 111
##   .. ..$ intensity : num [1:3] 100 14.41 9.51
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 90.1 99.5 111
##   .. ..$ intensity : num [1:3] 100 14.42 9.54
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 136 330 330 330
##   .. ..$ intensity : num [1:4] 33.33 5.51 9.21 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 79 107 134 328
##   .. ..$ intensity : num [1:4] 26.43 9.91 100 53.85
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 79 107 134 328
##   .. ..$ intensity : num [1:4] 26.41 9.89 100 53.89
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 136 330 330 330
##   .. ..$ intensity : num [1:4] 33.32 5.47 9.22 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 5 obs. of  2 variables:
##   .. ..$ masscharge: num [1:5] 60.1 85 102.1 103 162.1
##   .. ..$ intensity : num [1:5] 12.9 25.8 20.4 47.1 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 9 obs. of  2 variables:
##   .. ..$ masscharge: num [1:9] 57 58.1 59.1 60.1 61 ...
##   .. ..$ intensity : num [1:9] 5.23 42.66 14.31 39.56 2.91 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 5 obs. of  2 variables:
##   .. ..$ masscharge: num [1:5] 60.1 85 102.1 103 162.1
##   .. ..$ intensity : num [1:5] 13.3 26.1 19.8 47.4 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 485 obs. of  2 variables:
##   .. ..$ masscharge: num [1:485] 46.3 46.5 47.5 47.7 48.8 ...
##   .. ..$ intensity : num [1:485] 0.3 0.343 0.314 0.279 0.414 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 1000 obs. of  2 variables:
##   .. ..$ masscharge: num [1:1000] 45.1 45.2 45.2 45.3 45.6 ...
##   .. ..$ intensity : num [1:1000] 1.61 1.78 4.23 1.78 1.01 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 84.1 130.1
##   .. ..$ intensity : num [1:2] 100 38.1
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 84.1 130.1
##   .. ..$ intensity : num [1:2] 100 38.1
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 85 111 129 173
##   .. ..$ intensity : num [1:4] 100 10.71 26.83 8.71
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 85 111 129 173
##   .. ..$ intensity : num [1:4] 100 10.71 26.79 8.71
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 137 154
##   .. ..$ intensity : num [1:2] 100 95.4
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 91.1 109.1 119 137.1
##   .. ..$ intensity : num [1:4] 14.92 1.38 16.93 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 8 obs. of  2 variables:
##   .. ..$ masscharge: num [1:8] 65 79.1 81.1 91.1 94 ...
##   .. ..$ intensity : num [1:8] 6.071 1.277 2.066 100 0.501 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 11 obs. of  2 variables:
##   .. ..$ masscharge: num [1:11] 41 53 63 65 77 ...
##   .. ..$ intensity : num [1:11] 0.67 0.579 1.187 49.753 0.563 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 16 obs. of  2 variables:
##   .. ..$ masscharge: num [1:16] 39 41 51 53 55 ...
##   .. ..$ intensity : num [1:16] 3.35 2.27 3.34 1.22 0.634 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 9 obs. of  2 variables:
##   .. ..$ masscharge: num [1:9] 55 70 72 73 73.9 ...
##   .. ..$ intensity : num [1:9] 4.8 10.91 11.81 3.3 6.31 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 9 obs. of  2 variables:
##   .. ..$ masscharge: num [1:9] 55 70 72 73 73.9 ...
##   .. ..$ intensity : num [1:9] 4.83 10.89 11.76 3.3 6.26 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 447 obs. of  2 variables:
##   .. ..$ masscharge: num [1:447] 45.3 45.9 46.1 46.6 47 ...
##   .. ..$ intensity : num [1:447] 0.144 0.126 0.12 0.117 0.111 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 286 obs. of  2 variables:
##   .. ..$ masscharge: num [1:286] 45.3 45.8 48.5 48.6 49.4 ...
##   .. ..$ intensity : num [1:286] 11.93 13.92 8.81 10.23 12.22 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 8 obs. of  2 variables:
##   .. ..$ masscharge: num [1:8] 59 76 96.9 116 137.9 ...
##   .. ..$ intensity : num [1:8] 9.45 100 16.33 21.13 29.02 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 58.1 104.1
##   .. ..$ intensity : num [1:2] 67.1 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 58.1 104.1
##   .. ..$ intensity : num [1:2] 100 14.4
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 58.1 104.1
##   .. ..$ intensity : num [1:2] 60.9 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 58.1 104.1
##   .. ..$ intensity : num [1:2] 100 25.5
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 58.1 104.1
##   .. ..$ intensity : num [1:2] 67.1 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 58.1 104.1
##   .. ..$ intensity : num [1:2] 100 14.4
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 58.1 104.1
##   .. ..$ intensity : num [1:2] 60.8 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 58.1 104.1
##   .. ..$ intensity : num [1:2] 100 25.5
##   ..$ :&amp;#39;data.frame&amp;#39;: 14 obs. of  2 variables:
##   .. ..$ masscharge: num [1:14] 85 86.1 87 102.9 111 ...
##   .. ..$ intensity : num [1:14] 30 4.2 40.2 11.7 100 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 14 obs. of  2 variables:
##   .. ..$ masscharge: num [1:14] 85 86.1 87 102.9 111 ...
##   .. ..$ intensity : num [1:14] 30.06 4.24 40.25 11.67 100 ...
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 112 324
##   .. ..$ intensity : num [1:2] 50.7 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 112 324
##   .. ..$ intensity : num [1:2] 100 33.2
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 79 97 139 322
##   .. ..$ intensity : num [1:4] 100 52.45 7.51 60.36
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 79 97 139 322
##   .. ..$ intensity : num [1:4] 100 51.85 6.81 58.96
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 79 97 139 322
##   .. ..$ intensity : num [1:4] 100 52.48 7.46 60.4
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 79 97 139 322
##   .. ..$ intensity : num [1:4] 100 51.86 6.83 58.94
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 112 324
##   .. ..$ intensity : num [1:2] 50.6 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 2 obs. of  2 variables:
##   .. ..$ masscharge: num [1:2] 112 324
##   .. ..$ intensity : num [1:2] 100 33.3
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 58.1 60.1 104.1
##   .. ..$ intensity : num [1:3] 19.1 38.1 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 3 obs. of  2 variables:
##   .. ..$ masscharge: num [1:3] 58.1 60.1 104.1
##   .. ..$ intensity : num [1:3] 19.1 38.1 100
##   ..$ :&amp;#39;data.frame&amp;#39;: 4 obs. of  2 variables:
##   .. ..$ masscharge: num [1:4] 134 207 223 223
##   .. ..$ intensity : num [1:4] 4.2 13 3 100
##   .. [list output truncated]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This database has included all of the 5062 Q-ToF spectra from 1259 compounds in HMDB. We only considered the peaks larger than 10% of the base peak and calculated all of the paired mass distances within the spectra. For example, for compound HMDB0000014, the MS/MS spectra should be (112.1, 228.1) with intensity (69.97, 100). Then the PMD spectra for annotation should be 116 for this compounds.&lt;/p&gt;
&lt;p&gt;For the PMD annotation, we will also compute the PMDs of input spectra. Then we compare the input PMDs with the database. Here we need three parameters to refine the candidates. The first parameter is ppm for mass accuracy of precursor ions. The second parameter is the range of precursor ions, the default setting should be 1.1 to include M+H or M-H. The third parameter is the pmd length percentage cutoff for annotation. 0.6(default) means 60 percentage of the pmds in your sample could be found in certain compound pmd database. The fourth parameter is the relative intensity cutoff for input spectra for pmd analysis, default 0.1 for 10 % of the base peak.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# this is the sepctra of HMDB0034004
file &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;challenge-msms.mgf&amp;quot;, package = &amp;quot;rmwf&amp;quot;)
# pmd msms annotation
anno &amp;lt;- pmd::pmdanno(file,db=qtof)
unique(anno$name)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;HMDB0034004&amp;quot; &amp;quot;HMDB0003217&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;enviGCMS::plotanno(anno)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;index_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The score rule for pmd annotation is that the candidates will be ordered according to the overlapped pmd numbers. In this case, if two candidates have 3 and 4 pmd overlapped with the input spectra, the latter one will be the first candidate.&lt;/p&gt;
&lt;p&gt;Such annotation could be used for MS1 annotation. However, without precursor ion to refine the candidates. It’s better to find the M+H or M-H in advance. In this case, the input spectra should be processed by isotope, adducts or neutral loss detection by pmd of 1.006Da, 22.98Da, etc. Then the following step should be the same as MS2 pmd annotation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Retention time alignment for peaks list</title>
      <link>https://yufree.cn/en/2020/12/16/retention-time-alignment-for-peaks-list/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2020/12/16/retention-time-alignment-for-peaks-list/</guid>
      <description>&lt;p&gt;A regular open source metabolomics workflow could start from the open source format of RAW data. For xcms or other software, algorithm like obiwarp could be used to align the peaks into features. However, some workflows will start from the exported csv files from the instruments. The major issue is that peaks list is not features table and multiple samples should be aligned. Here I will show a native method to align peaks across samples in R considering the mass accuracy and pre-defined retention time shift.&lt;/p&gt;
&lt;p&gt;Firstly, the input object should be a list with elements as peaks list from single samples. It should be a data.frame with retention time, mass to charge ratio and intensities.&lt;/p&gt;
&lt;p&gt;Then we need to assign a sample as the template for alignment. The output of the alignment function should use m/z and rt data from this sample as the features property.&lt;/p&gt;
&lt;p&gt;Now we could align the peaks across samples.  All the samples&#39; peaks list should be aligned with the peaks list of template sample one by one. Here the alignment should consider the ppm of m/z and delta retention time. Each alignment will decrease the numbers of featuers when no peaks could be aligned to certain peaks in the template samples. This is a recursive process considering the aligned features&#39; intensities would be saved and reduced for the next paired alignment.&lt;/p&gt;
&lt;p&gt;When one peak from template sample could be aligned to multiple peaks in other peaks list, you need to define a function to deal with the intensity of feature in other samples. For example, you could use mean/median/sum to generate the features&#39; intensities for the other samples. Since our inputs are peaks lists, no peaks properties such as peak width, peak shape could be checked. It&amp;rsquo;s better to control this when you output the peaks list for single samples.&lt;/p&gt;
&lt;p&gt;If you are familiar with minifrac in xcms, you might find such alignment will actually set the minifrac as 1. In this case, you should perform this alignment on samples from the same group and you should not use this alignment for samples without group information.&lt;/p&gt;
&lt;p&gt;The final output should show the feature&#39; m/z, retention time and intensity across samples. However, this is alignment instead of correction. Such alignment will not correct the shift of retention time larger than certain cutoff, for example, 5s. The advantage of this alignment is that the concept is clear and easy to explain. The aligned peaks should be of high quality. This method could also be used to find the common ions across samples for quality control puporse.&lt;/p&gt;
&lt;p&gt;Here is the code (I will put this function in enviGCMS package later):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# check input to make sure the each peaks list contain &amp;#39;mz&amp;#39;, &amp;#39;rt&amp;#39; and &amp;#39;ins&amp;#39; as m/z, retetion time in seconds and intensity of certain peaks.&lt;/span&gt;
data1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sample1.csv&amp;#39;&lt;/span&gt;)
data2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sample2.csv&amp;#39;&lt;/span&gt;)
data3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sample3.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# generate the list as input&lt;/span&gt;
li &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(data1,data2,data3)
&lt;span style=&#34;color:#75715e&#34;&gt;# define the function to align peaks list&lt;/span&gt;
getretcor &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(list,cs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,ppm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,deltart&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, FUN){
  nli &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; list[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cs]
  csd &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; list[[cs]]
  i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  df1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; csd
  ins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; df1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;ins
  &lt;span style=&#34;color:#a6e22e&#34;&gt;while&lt;/span&gt;(i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(nli)){
    df2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; list[[i]]
    df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; enviGCMS&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getalign&lt;/span&gt;(df1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mz,df2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mz,df1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;rt,df2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;rt,ppm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ppm,deltart&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;deltart)
  mr2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(df2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mz,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@&amp;#39;&lt;/span&gt;,df2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;rt)
  mrx &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mz2,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@&amp;#39;&lt;/span&gt;,df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;rt2)
  
  df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;ins2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; df2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;ins&lt;span style=&#34;color:#a6e22e&#34;&gt;[match&lt;/span&gt;(mrx,mr2)]
  dfx &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; df[&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;duplicated&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;xid),]
  dfx&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;ins2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aggregate&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;ins2,by&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;xid),FUN)[,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
  df1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind.data.frame&lt;/span&gt;(mz&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dfx&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mz1,rt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dfx&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;rt1)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(ins))&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
    insn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; ins[df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;xid,]
    ins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind.data.frame&lt;/span&gt;(insn[&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;duplicated&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;xid),],dfx&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;ins2)
  }else{
    insn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; ins[df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;xid]
    ins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind.data.frame&lt;/span&gt;(ins1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;insn[&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;duplicated&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;xid)],dfx&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;ins2)
  }
  i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;
  }
  re &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind.data.frame&lt;/span&gt;(df1,ins)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(re) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mz&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rt&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ins&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(list)))
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(re)
}
&lt;span style=&#34;color:#75715e&#34;&gt;# usage&lt;/span&gt;
re &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getretcor&lt;/span&gt;(list,FUN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mean)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Local Metabolites-diseases database based on HMDB</title>
      <link>https://yufree.cn/en/2020/12/01/metabolites-diseases-database-based-on-hmdb/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2020/12/01/metabolites-diseases-database-based-on-hmdb/</guid>
      <description>
&lt;script src=&#34;https://yufree.cn/en/2020/12/01/metabolites-diseases-database-based-on-hmdb/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Human Metabolites Database(HMDB) is a great tool to access human related metabolites or small molecular. You could access metabolites’ information about disease, which is important for public health related studies. However, it’s not easy to search multiple metabolites at the same time. Here I will show a demo to locally access multiple metabolites’ disease information.&lt;/p&gt;
&lt;div id=&#34;step-1-annotate-the-mz-with-hmdb-id&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 1: Annotate the m/z with HMDB ID&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rmwf)
library(enviGCMS)
data(&amp;quot;mzrt&amp;quot;)
data(&amp;quot;hr&amp;quot;)
re &amp;lt;- enviGCMS::getms1anno(pmd = c(&amp;#39;Na-H&amp;#39;,&amp;#39;H&amp;#39;,&amp;#39;Na&amp;#39;), mz = mzrt$mz[1:10], ppm = 5, db=hr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## No retention time information!
## No retention time information!
## No retention time information!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Only check [M+H]+
name &amp;lt;- unique(re[[2]]$name)
# from name to HMDB ID
HMDBID &amp;lt;- webchem::cts_convert(name,&amp;#39;name&amp;#39;,&amp;#39;human metabolome database&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Querying Diethanolamine.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## OK (HTTP 200).
## Querying 2-Piperidinone. OK (HTTP 200).
## Querying S-Ethyl thioacetate. OK (HTTP 200).
##  Not found. Returning NA.
## Querying S-Methyl propanethioate. OK (HTTP 200).
##  Not found. Returning NA.
## Querying N-Nitroso-pyrrolidine. OK (HTTP 200).
##  Not found. Returning NA.
## Querying 3-(Methylthio)propanal. OK (HTTP 200).
## Querying 3-Mercapto-2-butanone. OK (HTTP 200).
## Querying Gyromitrin. OK (HTTP 200).
## Querying 1-Pyrrolidinecarboxaldehyde. OK (HTTP 200).
## Querying (Methylthio)acetone. OK (HTTP 200).
## Querying 2,5-Dihydro-2,4-dimethyloxazole. OK (HTTP 200).
##  Not found. Returning NA.
## Querying 4-Mercapto-2-butanone. OK (HTTP 200).
## Querying (2R)-2-Hydroxy-2-methylbutanenitrile. OK (HTTP 200).
##  Not found. Returning NA.
## Querying cis-3-Chloroacrylic acid. OK (HTTP 200).
##  Not found. Returning NA.
## Querying trans-3-Chloroacrylic acid. OK (HTTP 200).
##  Not found. Returning NA.
## Querying Allyl methyl sulfoxide. OK (HTTP 200).
##  Not found. Returning NA.
## Querying Neurine. OK (HTTP 200).
##  Not found. Returning NA.
## Querying 2-Hydroxy-2-methylbutanenitrile. OK (HTTP 200).
## Querying N-Methylpyrrolidin-2-one. OK (HTTP 200).
##  Not found. Returning NA.
## Querying Tetrahydrothiophene-1-oxide. OK (HTTP 200).
##  Not found. Returning NA.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;HID &amp;lt;- unlist(HMDBID)[!is.na(unlist(HMDBID))]
# Check the results
HID&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                  Diethanolamine                  2-Piperidinone 
##                   &amp;quot;HMDB0004437&amp;quot;                   &amp;quot;HMDB0011749&amp;quot; 
##          3-(Methylthio)propanal           3-Mercapto-2-butanone 
##                   &amp;quot;HMDB0031857&amp;quot;                   &amp;quot;HMDB0031982&amp;quot; 
##                      Gyromitrin     1-Pyrrolidinecarboxaldehyde 
##                   &amp;quot;HMDB0033952&amp;quot;                   &amp;quot;HMDB0034587&amp;quot; 
##             (Methylthio)acetone           4-Mercapto-2-butanone 
##                   &amp;quot;HMDB0040170&amp;quot;                   &amp;quot;HMDB0041015&amp;quot; 
## 2-Hydroxy-2-methylbutanenitrile 
##                   &amp;quot;HMDB0060309&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2-build-local-hmdb-disease-database-and-search-id&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 2: Build local HMDB disease database and search ID&lt;/h2&gt;
&lt;p&gt;Here is the python code to extract disease related information:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from io import StringIO
from lxml import etree
import csv
def hmdbpextract(name, file):
  ns = {&amp;#39;hmdb&amp;#39;: &amp;#39;http://www.hmdb.ca&amp;#39;}
  context = etree.iterparse(name, tag=&amp;#39;{http://www.hmdb.ca}metabolite&amp;#39;)
  csvfile = open(file, &amp;#39;w&amp;#39;)
  fieldnames = [&amp;#39;accession&amp;#39;, &amp;#39;dname&amp;#39;]
  writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
  writer.writeheader()
  for event, elem in context:

    accession = elem.xpath(&amp;#39;hmdb:accession/text()&amp;#39;, namespaces=ns)[0]
    try:
        dname = elem.xpath(&amp;#39;hmdb:diseases/hmdb:disease/hmdb:name/text()&amp;#39;, namespaces=ns)
    except:
        dname = &amp;#39;NA&amp;#39;
    writer.writerow({&amp;#39;accession&amp;#39;: accession, &amp;#39;dname&amp;#39;: dname})
    # It&amp;#39;s safe to call clear() here because no descendants will be
    # accessed
    elem.clear()
# Also eliminate now-empty references from the root node to elem
    for ancestor in elem.xpath(&amp;#39;ancestor-or-self::*&amp;#39;):
        while ancestor.getprevious() is not None:
            del ancestor.getparent()[0]
  del context
  return;
hmdbpextract(&amp;#39;hmdb_metabolites.xml&amp;#39;,&amp;#39;hmdbd.csv&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you download HMDB xml file, you could get csv file with disease related information with above code.&lt;/p&gt;
&lt;p&gt;However, we need to make this csv file friendly for batch search.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hmdb &amp;lt;- read.csv(&amp;#39;hmdbd.csv&amp;#39;)
hmdb2 &amp;lt;- t(apply(hmdb,1,function(x) gsub( &amp;quot;^\\[|]$&amp;quot;, &amp;quot;&amp;quot;, as.character(x))))
hmdb2 &amp;lt;- as.data.frame(hmdb2)
colnames(hmdb2) &amp;lt;- colnames(hmdb)

disease &amp;lt;- hmdb2[,c(&amp;quot;accession&amp;quot;,&amp;quot;dname&amp;quot;)]

g &amp;lt;- strsplit(as.character(hmdb2$dname), &amp;quot;,&amp;quot;)
dname &amp;lt;- data.frame(accession = rep(hmdb2$accession, lapply(g, length)), dname = unlist(g))
dname$dname &amp;lt;- gsub( &amp;#39;^ &amp;#39;, &amp;quot;&amp;quot;, as.character(dname$dname))
dname$dname &amp;lt;- gsub( &amp;quot;^&amp;#39;|&amp;#39;$&amp;quot;, &amp;quot;&amp;quot;, as.character(dname$dname))
dname$dname &amp;lt;- gsub( &amp;#39;^&amp;quot;|&amp;quot;$&amp;#39;, &amp;quot;&amp;quot;, as.character(dname$dname))

write.csv(dname,&amp;#39;hmdbdname.csv&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This part need to download HMDB database and extract the disease information. I know it’s too much for user and I already did this for you.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# download HMDB disease database
db &amp;lt;- read.csv(&amp;#39;https://raw.githubusercontent.com/yufree/expodb/master/hmdb/hmdbdname.csv&amp;#39;)
alld &amp;lt;- db[db$accession%in%HID,]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3-search-hmdb-id-for-disease-information&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 3: Search HMDB ID for disease information&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;alld&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         X   accession                            dname
## 6908 6908 HMDB0011749                   Ovarian cancer
## 6909 6909 HMDB0011749                  Crohn&amp;#39;s disease
## 6910 6910 HMDB0011749               Ulcerative colitis
## 6911 6911 HMDB0011749                Colorectal cancer
## 7625 7625 HMDB0031857 Nonalcoholic fatty liver disease&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we could find two compounds might relate to five disease.&lt;/p&gt;
&lt;p&gt;This is a very simple example from m/z to disease and you could hack the code to find new world.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Independent peaks selection algorithms</title>
      <link>https://yufree.cn/en/2020/08/12/independent-peaks-selection-algorithms/</link>
      <pubDate>Wed, 12 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2020/08/12/independent-peaks-selection-algorithms/</guid>
      <description>
&lt;script src=&#34;https://yufree.cn/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In mass spectrometry based untargeted analysis, raw data from instrument contain peaks level information. However, we actually care about compounds level information. For target analysis, quantitative and qualitative ions could stand for the target compounds. However, in untargeted analysis, full scan mode will collect all the charged compounds’ ions. One compound could generate multiple ions such as adducts, neutral loss, multiple charged ions, isotopougue and/or fragmental ions and those peaks are highly correlated with each other. If we will perform the statistical analysis at compounds level, those highly correlated ions will disturb the independent assumption of those statistical analysis. In this case, we need algorithm to remove such redundant peaks or select pseudo targeted ions for unknown compounds. Ideally, selection of molecular ion will make the following analysis much easier.&lt;/p&gt;
&lt;p&gt;To detect such redundant peaks, two relationships could be used: paired mass distance (PMD) and paired correlation. I developed GlobalStd algorithm to remove such redundant peaks based on PMD relationship. However, I actually added the function to use correlation along with PMD in this algorithm. To make the details clear, I also added functions to extract independent peaks based on correlation, as well as the ions clusters extraction function. The ions clusters could be treated the pseudo spectra detection algorithm. In this case, we could not only extract the independent ions for compounds level analysis, but also grab the pseudo specturm of this compounds for annotation purpose.&lt;/p&gt;
&lt;p&gt;Here I will demo how to perform such analysis based on PMD package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# use dev version of PMD package
# remotes::install_github(&amp;#39;yufree/pmd&amp;#39;)
library(pmd)
library(enviGCMS)
# load demo data
data(spmeinvivo)
# perform GlobalStd algorithm
list &amp;lt;- globalstd(spmeinvivo)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 75 retention time cluster found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 380 paired masses found&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 9 unique within RT clusters high frequency PMD(s) used for further investigation.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 719 isotopologue(s) related paired mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 492 multi-charger(s) related paired mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 8 retention group(s) have single peaks. 14 23 32 33 54 55 56 75&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 11 group(s) with multiple peaks while no isotope/paired relationship 4 5 7 8 11 41 42 49 68 72 73&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 9 group(s) with multiple peaks with isotope without paired relationship 2 9 22 26 52 62 64 66 70&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 4 group(s) with paired relationship without isotope 1 10 15 18&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 43 group(s) with paired relationship and isotope 3 6 12 13 16 17 19 20 21 24 25 27 28 29 30 31 34 35 36 37 38 39 40 43 44 45 46 47 48 50 51 53 57 58 59 60 61 63 65 67 69 71 74&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 297 std mass found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## PMD frequency cutoff is 6 by PMD network analysis with largest network average distance 5.99 .&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 57 groups were found as high frequency PMD group.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0 was found as high frequency PMD. 
## 1.98 was found as high frequency PMD. 
## 2.01 was found as high frequency PMD. 
## 2.02 was found as high frequency PMD. 
## 6.97 was found as high frequency PMD. 
## 11.96 was found as high frequency PMD. 
## 12 was found as high frequency PMD. 
## 12.04 was found as high frequency PMD. 
## 13.98 was found as high frequency PMD. 
## 14.02 was found as high frequency PMD. 
## 14.05 was found as high frequency PMD. 
## 15.99 was found as high frequency PMD. 
## 16.03 was found as high frequency PMD. 
## 19.04 was found as high frequency PMD. 
## 28.03 was found as high frequency PMD. 
## 30.05 was found as high frequency PMD. 
## 31.99 was found as high frequency PMD. 
## 37.02 was found as high frequency PMD. 
## 42.05 was found as high frequency PMD. 
## 48.04 was found as high frequency PMD. 
## 48.98 was found as high frequency PMD. 
## 49.02 was found as high frequency PMD. 
## 54.05 was found as high frequency PMD. 
## 56.06 was found as high frequency PMD. 
## 56.1 was found as high frequency PMD. 
## 58.04 was found as high frequency PMD. 
## 58.08 was found as high frequency PMD. 
## 58.11 was found as high frequency PMD. 
## 63.96 was found as high frequency PMD. 
## 66.05 was found as high frequency PMD. 
## 68.06 was found as high frequency PMD. 
## 70.04 was found as high frequency PMD. 
## 70.08 was found as high frequency PMD. 
## 74.02 was found as high frequency PMD. 
## 80.03 was found as high frequency PMD. 
## 82.08 was found as high frequency PMD. 
## 88.05 was found as high frequency PMD. 
## 91.1 was found as high frequency PMD. 
## 93.12 was found as high frequency PMD. 
## 96.09 was found as high frequency PMD. 
## 101.05 was found as high frequency PMD. 
## 108.13 was found as high frequency PMD. 
## 110.11 was found as high frequency PMD. 
## 112.16 was found as high frequency PMD. 
## 116.08 was found as high frequency PMD. 
## 122.15 was found as high frequency PMD. 
## 124.16 was found as high frequency PMD. 
## 126.14 was found as high frequency PMD. 
## 148.04 was found as high frequency PMD. 
## 150.2 was found as high frequency PMD. 
## 173.18 was found as high frequency PMD. 
## 191.08 was found as high frequency PMD. 
## 191.15 was found as high frequency PMD. 
## 192.19 was found as high frequency PMD. 
## 194.2 was found as high frequency PMD. 
## 267.25 was found as high frequency PMD. 
## 325.3 was found as high frequency PMD.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get new list with independent peaks
listi &amp;lt;- getfilter(list,rowindex = list$stdmassindex)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have 297 peaks compared with original 1459 peaks. If we removed the right redundant peaks, the PCA score plot will not change too much with a much smaller data set.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# plot the comparision
par(mfrow = c(1,2),mar = c(4,4,2,1)+0.1)
plotpca(list$data,lv = as.numeric(as.factor(list$group)),main = &amp;quot;all peaks&amp;quot;)
plotpca(listi$data,lv = as.numeric(as.factor(listi$group)),main = &amp;quot; independent peaks&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2020-08-12-independent-peaks-selection-algorithms_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The GlobalStd algorithm with default setting will not use intensity data. However, if we could use intensity data to refine the result, we could select the base peaks of each pseudo spectrum. After consideration of correlation relationship, we could further select the base independent peaks.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;base &amp;lt;- getcluster(list)
# get the new list with independent base peaks
listb &amp;lt;- getfilter(list,rowindex = base$stdmassindex2)
# get the new list with reduced independent base peaks
basei &amp;lt;- getcluster(list,corcutoff = 0.9)
listib &amp;lt;- getfilter(list,rowindex = basei$stdmassindex2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we didn’t use PMD, we could also detect the correlation cluster within narrow retention time window as pseudo spectra. I also supplied function to select the correlation independent peaks and base correlation independent peaks.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ci &amp;lt;- getcorcluster(spmeinvivo)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 75 retention time cluster found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get the new list with correlation independent peaks
listci &amp;lt;- getfilter(list,rowindex = ci$stdmassindex)
# get the new list with base correlation independent peaks
listcib &amp;lt;- getfilter(list,rowindex = ci$stdmassindex2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We could compare the compare reduced result using PCA similarity factor. A good peak selection algorithm could show a high PCA similarity factor compared with original data set while retain the minmized number of peaks.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mfrow = c(2,3),mar = c(4,4,2,1)+0.1)
plotpca(listi$data,lv = as.numeric(as.factor(list$group)),main = paste(sum(list$stdmassindex),&amp;quot;independent peaks&amp;quot;))
plotpca(listb$data,lv = as.numeric(as.factor(list$group)),main = paste(sum(base$stdmassindex2),&amp;quot;independent base peaks&amp;quot;))
plotpca(listib$data,lv = as.numeric(as.factor(list$group)),main = paste(sum(basei$stdmassindex2),&amp;quot;reduced independent base peaks&amp;quot;))
plotpca(listci$data,lv = as.numeric(as.factor(list$group)),main = paste(sum(ci$stdmassindex),&amp;quot;peaks without correlationship&amp;quot;))
plotpca(listcib$data,lv = as.numeric(as.factor(list$group)),main = paste(sum(ci$stdmassindex2),&amp;quot;base peaks without correlationship&amp;quot;))
plotpca(list$data,lv = as.numeric(as.factor(list$group)),main = paste(nrow(list$data),&amp;quot;all peaks&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://yufree.cn/en/2020-08-12-independent-peaks-selection-algorithms_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In this case, five peaks selection algorithms are fine to stand for the original peaks. However, the independent base peaks retain the most information with relative low numbers of peaks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SI for ASMS 2020 Reboot Reactomics Presentation</title>
      <link>https://yufree.cn/en/2020/06/07/si-for-asms-2020-reboot-presentation/</link>
      <pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yufree.cn/en/2020/06/07/si-for-asms-2020-reboot-presentation/</guid>
      <description>&lt;p&gt;I will be in the Q&amp;amp;A session for ASMS 2020 Reboot MOB pm: Exposomics, Toxicology, and Health Outcomes tomorrow. 20 minutes might not be enough to cover all the details of &amp;ldquo;Reactomics: using mass spectrometry as chemical reaction detector&amp;rdquo;. Here I list some useful resources for this presentation and I will update the Q&amp;amp;A after the online session in this post.&lt;/p&gt;
&lt;h3 id=&#34;resources&#34;&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://youtu.be/-mT3HcVygHE&#34;&gt;Video&lt;/a&gt;. If you didn&amp;rsquo;t register for ASMS 2020 Reboot, here is the link to unlisted video on YouTube.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://yufree.github.io/presentation/reactomics/pres-asms.html&#34;&gt;Slides&lt;/a&gt;. This is the slides for ASMS 2020 Reboot. Press &amp;ldquo;P&amp;rdquo; and you will see the notes for each slide with details. Another full version of reactomics presentation for one hour presentation could be found &lt;a href=&#34;http://yufree.github.io/presentation/reactomics/pres&#34;&gt;here&lt;/a&gt;. I will not update the conference presentation while I will add new contents for the full version of reactomics presentation whenever I have new results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.biorxiv.org/content/10.1101/855148v2&#34;&gt;Reactomics Preprint on BioRxiv&lt;/a&gt;. This preprint contain the same contents as shown in the presentation. I will update the manuscript later in this week for some changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/pmd/index.html&#34;&gt;pmd package&lt;/a&gt;. This is the software for reactomics. It&amp;rsquo;s on CRAN and you could check this &lt;a href=&#34;https://yufree.github.io/pmd/&#34;&gt;site&lt;/a&gt; for the most updated version with new functions, updated pmd annotation database and &lt;a href=&#34;https://yufree.github.io/pmd/articles/globalstd.html&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/30661584/&#34;&gt;pmd paper&lt;/a&gt;. This is the first paper on pmd package to introduce structure/reaction directed analysis and I developed this idea into reactomics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://yufree.shinyapps.io/pmdapp/&#34;&gt;GlobalStd Shiny App&lt;/a&gt;. This is online application to reduce peaks list into independent peaks by GlobalStd algorithm. This app try to remove redundancy peaks such as co-eluted peaks, multi-chargers, adducts, neutral loss, isotopologues, and fragments ions in the peak list by pmd frequency analysis. Then you will have a smaller while independent peaks list (usually less that 20% of original peaks numbers) csv file for reactomics analysis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://yufree.shinyapps.io/pmdnet&#34;&gt;pmd network analysis Shiny App&lt;/a&gt;. This is online application to perform pmd network analysis. It tries to find all the possible metabolites of certain input mass to charge ratio and pmd values. You could reproduce the pumpkin TBBPA study results as shown in the presentation. Both online app could be run locally when you install pmd package. &lt;code&gt;runPMD()&lt;/code&gt; could start the GlobalStd Shiny App and &lt;code&gt;runPMDnet()&lt;/code&gt; could start the pmd network analysis Shiny App.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/18qDbjy1PYuLZgOOlbSgzkpFBQnc3k-H5XhQPHjszfHA/edit?usp=sharing&#34;&gt;PMDDA Workflow Poster&lt;/a&gt;. This is the PMDDA workflow poster for ASMS 2020 Reboot. PMDDA workflow tries to produce MS1 level independent peaks (GlobalStd algorithm) for MS2 pseudo targeted analysis and make annotation based on PMD of MS2 spectra.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/yufree/xcmsrocker/&#34;&gt;xcmsrocker image&lt;/a&gt;. This is the Rocker image for metabolomics data analysis. If you are familiar with docker image, this image include the same data analysis environment with all of the R based software used in my current lab for reproducible research. It also contain PMDDA workflow data analysis template as part of &lt;a href=&#34;https://github.com/yufree/rmwf&#34;&gt;rmwf package&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bookdown.org/yufree/Metabolomics/&#34;&gt;meta-workflow online book&lt;/a&gt;. This is a online book for maintained by me. You could find answers for most of the metabolomics data analysis related questions. It&amp;rsquo;s open source to anyone who wish to contribute. Any PR is welcomed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yufree/mdaw&#34;&gt;Metabolomics Data Analysis Workshop Slides&lt;/a&gt;. I have organized this Workshop in University of Waterloo and University of California, Irvine. The slides will be updated according to the most updated research. It&amp;rsquo;s a good start for the beginner of metabolomics data analysis.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;qa&#34;&gt;Q&amp;amp;A&lt;/h3&gt;
&lt;p&gt;There are one question for the resources of the software and I listed above. Just share some interesting data:&lt;/p&gt;
&lt;p&gt;On Monday, there were 620 presentations with 364 questions. However, without time limitation and questions from the session chair, 415 presentations got 0 question and the hottest talk got 13 questions. In my session, no more than 40 people were online for Q&amp;amp;A, which looks poor compared with offline meeting.&lt;/p&gt;
&lt;p&gt;However, those numbers coin with the paper citation records. Few important paper dominated the citations of certain journal. Anyway, popularity means nothing about science and communication will help us something new.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
